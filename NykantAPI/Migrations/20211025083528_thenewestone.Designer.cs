// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NykantAPI.Data;

namespace NykantAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211025083528_thenewestone")]
    partial class thenewestone
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NykantAPI.Models.BagItem", b =>
                {
                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Subject", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("BagItems");
                });

            modelBuilder.Entity("NykantAPI.Models.BillingAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("BillingAddress");
                });

            modelBuilder.Entity("NykantAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Stativ"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bord"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hylde"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bænk"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Bøjle"
                        });
                });

            modelBuilder.Entity("NykantAPI.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("NykantAPI.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 3,
                            Source = "../images/Products/NYKANT_boejle_hvidolie_01.png"
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 3,
                            Source = "../images/Products/NYKANT_boejle_hvidolie_02.png"
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 1,
                            Source = "../images/Products/NYKANT_boejle_naturolie_01.png"
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 1,
                            Source = "../images/Products/NYKANT_boejle_naturolie_02.png"
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 2,
                            Source = "../images/Products/NYKANT_boejle_sortolie_01.png"
                        },
                        new
                        {
                            Id = 6,
                            ProductId = 2,
                            Source = "../images/Products/NYKANT_boejle_sortolie_02.png"
                        },
                        new
                        {
                            Id = 7,
                            ProductId = 7,
                            Source = "../images/Products/NYKANT_bord_naturolie_01.png"
                        },
                        new
                        {
                            Id = 8,
                            ProductId = 7,
                            Source = "../images/Products/NYKANT_bord_naturolie_02.png"
                        },
                        new
                        {
                            Id = 9,
                            ProductId = 7,
                            Source = "../images/Products/NYKANT_bord_naturolie_03.png"
                        },
                        new
                        {
                            Id = 10,
                            ProductId = 4,
                            Source = "../images/Products/NYKANT_hylde_hvidolie_01.png"
                        },
                        new
                        {
                            Id = 11,
                            ProductId = 4,
                            Source = "../images/Products/NYKANT_hylde_hvidolie_02.png"
                        },
                        new
                        {
                            Id = 12,
                            ProductId = 4,
                            Source = "../images/Products/NYKANT_hylde_hvidolie_03.png"
                        },
                        new
                        {
                            Id = 13,
                            ProductId = 6,
                            Source = "../images/Products/NYKANT_hylde_naturolie_01.png"
                        },
                        new
                        {
                            Id = 14,
                            ProductId = 6,
                            Source = "../images/Products/NYKANT_hylde_naturolie_02.png"
                        },
                        new
                        {
                            Id = 15,
                            ProductId = 6,
                            Source = "../images/Products/NYKANT_hylde_naturolie_03.png"
                        },
                        new
                        {
                            Id = 16,
                            ProductId = 5,
                            Source = "../images/Products/NYKANT_hylde_sortolie_01.png"
                        },
                        new
                        {
                            Id = 17,
                            ProductId = 5,
                            Source = "../images/Products/NYKANT_hylde_sortolie_02.png"
                        },
                        new
                        {
                            Id = 18,
                            ProductId = 5,
                            Source = "../images/Products/NYKANT_hylde_sortolie_03.png"
                        },
                        new
                        {
                            Id = 19,
                            ProductId = 8,
                            Source = "../images/Products/NYKANT_kortbaenk_naturolie_01.png"
                        },
                        new
                        {
                            Id = 20,
                            ProductId = 8,
                            Source = "../images/Products/NYKANT_kortbaenk_naturolie_02.png"
                        },
                        new
                        {
                            Id = 21,
                            ProductId = 8,
                            Source = "../images/Products/NYKANT_kortbaenk_naturolie_03.png"
                        },
                        new
                        {
                            Id = 22,
                            ProductId = 9,
                            Source = "../images/Products/NYKANT_langbaenk_naturolie_01.png"
                        },
                        new
                        {
                            Id = 23,
                            ProductId = 9,
                            Source = "../images/Products/NYKANT_langbaenk_naturolie_02.png"
                        },
                        new
                        {
                            Id = 24,
                            ProductId = 9,
                            Source = "../images/Products/NYKANT_langbaenk_naturolie_03.png"
                        },
                        new
                        {
                            Id = 25,
                            ProductId = 10,
                            Source = "../images/Products/NYKANT_opbevaringsbaenk_naturolie_01.png"
                        },
                        new
                        {
                            Id = 26,
                            ProductId = 10,
                            Source = "../images/Products/NYKANT_opbevaringsbaenk_naturolie_02.png"
                        },
                        new
                        {
                            Id = 27,
                            ProductId = 10,
                            Source = "../images/Products/NYKANT_opbevaringsbaenk_naturolie_03.png"
                        },
                        new
                        {
                            Id = 28,
                            ProductId = 10,
                            Source = "../images/Products/NYKANT_opbevaringsbaenk_naturolie_04.png"
                        },
                        new
                        {
                            Id = 29,
                            ProductId = 10,
                            Source = "../images/Products/NYKANT_opbevaringsbaenk_naturolie_05.png"
                        },
                        new
                        {
                            Id = 30,
                            ProductId = 10,
                            Source = "../images/Products/NYKANT_opbevaringsbaenk_naturolie_06.png"
                        },
                        new
                        {
                            Id = 31,
                            ProductId = 10,
                            Source = "../images/Products/NYKANT_opbevaringsbaenk_naturolie_07.png"
                        },
                        new
                        {
                            Id = 32,
                            ProductId = 11,
                            Source = "../images/Products/NYKANT_rack_naturolie_01.png"
                        },
                        new
                        {
                            Id = 33,
                            ProductId = 11,
                            Source = "../images/Products/NYKANT_rack_naturolie_02.png"
                        },
                        new
                        {
                            Id = 34,
                            ProductId = 11,
                            Source = "../images/Products/NYKANT_rack_naturolie_03.png"
                        },
                        new
                        {
                            Id = 35,
                            ProductId = 11,
                            Source = "../images/Products/NYKANT_rack_naturolie_04.png"
                        },
                        new
                        {
                            Id = 36,
                            ProductId = 11,
                            Source = "../images/Products/NYKANT_rack_naturolie_05.png"
                        },
                        new
                        {
                            Id = 37,
                            ProductId = 11,
                            Source = "../images/Products/NYKANT_rack_naturolie_06.png"
                        });
                });

            modelBuilder.Entity("NykantAPI.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentIntent_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubtotalPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Taxes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("NykantAPI.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("NykantAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageSource2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("TypeOfWood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("WeightInKg")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 5,
                            Description = "Bøjlen.",
                            ImageSource = "../images/Products/NYKANT_boejle_naturolie_01.png",
                            ImageSource2 = "../images/Products/NYKANT_boejle_naturolie_02.png",
                            Name = "Nora",
                            Oil = "Naturolie",
                            Price = 1000,
                            TypeOfWood = "Eg",
                            WeightInKg = 11.6
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 5,
                            Description = "Bøjlen.",
                            ImageSource = "../images/Products/NYKANT_boejle_sortolie_01.png",
                            ImageSource2 = "../images/Products/NYKANT_boejle_sortolie_02.png",
                            Name = "Nora",
                            Oil = "Sortolie",
                            Price = 1000,
                            TypeOfWood = "Eg",
                            WeightInKg = 11.6
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 5,
                            Description = "Bøjlen.",
                            ImageSource = "../images/Products/NYKANT_boejle_hvidolie_01.png",
                            ImageSource2 = "../images/Products/NYKANT_boejle_hvidolie_02.png",
                            Name = "Nora",
                            Oil = "Hvidolie",
                            Price = 1000,
                            TypeOfWood = "Eg",
                            WeightInKg = 11.6
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "Hylden.",
                            ImageSource = "../images/Products/NYKANT_hylde_hvidolie_01.png",
                            ImageSource2 = "../images/Products/NYKANT_hylde_hvidolie_02.png",
                            Name = "Nora",
                            Oil = "Hvidolie",
                            Price = 1000,
                            TypeOfWood = "Eg",
                            WeightInKg = 11.6
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "Hylden.",
                            ImageSource = "../images/Products/NYKANT_hylde_sortolie_01.png",
                            ImageSource2 = "../images/Products/NYKANT_hylde_sortolie_02.png",
                            Name = "Nora",
                            Oil = "Sortolie",
                            Price = 1000,
                            TypeOfWood = "Eg",
                            WeightInKg = 11.6
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Description = "Hylden.",
                            ImageSource = "../images/Products/NYKANT_hylde_naturolie_01.png",
                            ImageSource2 = "../images/Products/NYKANT_hylde_naturolie_02.png",
                            Name = "Nora",
                            Oil = "Naturolie",
                            Price = 1000,
                            TypeOfWood = "Eg",
                            WeightInKg = 11.6
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "Bordet.",
                            ImageSource = "../images/Products/NYKANT_bord_naturolie_01.png",
                            ImageSource2 = "../images/Products/NYKANT_bord_naturolie_02.png",
                            Name = "Nora",
                            Oil = "Naturolie",
                            Price = 1000,
                            TypeOfWood = "Eg",
                            WeightInKg = 11.6
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            Description = "Den korte bænk",
                            ImageSource = "../images/Products/NYKANT_kortbaenk_naturolie_01.png",
                            ImageSource2 = "../images/Products/NYKANT_kortbaenk_naturolie_02.png",
                            Name = "Nora",
                            Oil = "Naturolie",
                            Price = 1000,
                            TypeOfWood = "Eg",
                            WeightInKg = 13.4
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 4,
                            Description = "Den lange bænk",
                            ImageSource = "../images/Products/NYKANT_langbaenk_naturolie_01.png",
                            ImageSource2 = "../images/Products/NYKANT_langbaenk_naturolie_02.png",
                            Name = "Nora",
                            Oil = "Naturolie",
                            Price = 1000,
                            TypeOfWood = "Eg",
                            WeightInKg = 13.4
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 4,
                            Description = "Opbevaringsbænk",
                            ImageSource = "../images/Products/NYKANT_opbevaringsbaenk_naturolie_01.png",
                            ImageSource2 = "../images/Products/NYKANT_opbevaringsbaenk_naturolie_02.png",
                            Name = "Grete",
                            Oil = "Naturolie",
                            Price = 1000,
                            TypeOfWood = "Eg",
                            WeightInKg = 13.4
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            Description = "Vores tøjstativ ”Nora” er udviklet i et system hvor det samles uden skruer og lim, men udelukkende med kiler i massiv egetræ. Detaljen i sig selv er både meget nem at samle og skille, men viser måske i endnu højere grad nogle meget smukke og enkle detaljer, Der klæder møblet med en meget høj snedkermæssig niveau.",
                            ImageSource = "../images/Products/NYKANT_rack_naturolie_01.png",
                            ImageSource2 = "../images/Products/NYKANT_rack_naturolie_02.png",
                            Name = "Ingrid",
                            Oil = "Naturolie",
                            Price = 1000,
                            TypeOfWood = "Eg",
                            WeightInKg = 13.4
                        });
                });

            modelBuilder.Entity("NykantAPI.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("NykantAPI.Models.ShippingAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SameAsBilling")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("ShippingAddress");
                });

            modelBuilder.Entity("NykantAPI.Models.ShippingDelivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("ShippingDeliveries");
                });

            modelBuilder.Entity("NykantMVC.Models.ParcelshopData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCodeISO3166A2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistanceMetersAsTheCrowFlies")
                        .HasColumnType("int");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShippingDeliveryId")
                        .HasColumnType("int");

                    b.Property<string>("Streetname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Streetname2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShippingDeliveryId")
                        .IsUnique();

                    b.ToTable("ParcelshopData");
                });

            modelBuilder.Entity("NykantAPI.Models.BagItem", b =>
                {
                    b.HasOne("NykantAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NykantAPI.Models.BillingAddress", b =>
                {
                    b.HasOne("NykantAPI.Models.Customer", "Customer")
                        .WithOne("BillingAddress")
                        .HasForeignKey("NykantAPI.Models.BillingAddress", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NykantAPI.Models.Image", b =>
                {
                    b.HasOne("NykantAPI.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NykantAPI.Models.Order", b =>
                {
                    b.HasOne("NykantAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NykantAPI.Models.OrderItem", b =>
                {
                    b.HasOne("NykantAPI.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NykantAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NykantAPI.Models.Product", b =>
                {
                    b.HasOne("NykantAPI.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NykantAPI.Models.Review", b =>
                {
                    b.HasOne("NykantAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NykantAPI.Models.ShippingAddress", b =>
                {
                    b.HasOne("NykantAPI.Models.Customer", "Customer")
                        .WithOne("ShippingAddress")
                        .HasForeignKey("NykantAPI.Models.ShippingAddress", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NykantAPI.Models.ShippingDelivery", b =>
                {
                    b.HasOne("NykantAPI.Models.Order", "Order")
                        .WithOne("ShippingDelivery")
                        .HasForeignKey("NykantAPI.Models.ShippingDelivery", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NykantMVC.Models.ParcelshopData", b =>
                {
                    b.HasOne("NykantAPI.Models.ShippingDelivery", "ShippingDelivery")
                        .WithOne("ParcelshopData")
                        .HasForeignKey("NykantMVC.Models.ParcelshopData", "ShippingDeliveryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
